// Generated by view binder compiler. Do not edit!
package com.example.chotamnaulitce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chotamnaulitce.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DetailsWeatherFragmentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView cityName;

  @NonNull
  public final AppCompatImageView conditionImageView;

  @NonNull
  public final TextInputEditText conditionValue;

  @NonNull
  public final TextInputEditText humidityValue;

  @NonNull
  public final TextInputEditText latitudeEntry;

  @NonNull
  public final TextInputEditText longitudeEntry;

  @NonNull
  public final TextInputEditText temperatureActualValue;

  @NonNull
  public final TextInputEditText temperatureFeelsValue;

  @NonNull
  public final NestedScrollView weatherDetailsFragment;

  @NonNull
  public final TextInputEditText windDirectionValue;

  @NonNull
  public final TextInputEditText windSpeedValue;

  private DetailsWeatherFragmentBinding(@NonNull NestedScrollView rootView,
      @NonNull TextView cityName, @NonNull AppCompatImageView conditionImageView,
      @NonNull TextInputEditText conditionValue, @NonNull TextInputEditText humidityValue,
      @NonNull TextInputEditText latitudeEntry, @NonNull TextInputEditText longitudeEntry,
      @NonNull TextInputEditText temperatureActualValue,
      @NonNull TextInputEditText temperatureFeelsValue,
      @NonNull NestedScrollView weatherDetailsFragment,
      @NonNull TextInputEditText windDirectionValue, @NonNull TextInputEditText windSpeedValue) {
    this.rootView = rootView;
    this.cityName = cityName;
    this.conditionImageView = conditionImageView;
    this.conditionValue = conditionValue;
    this.humidityValue = humidityValue;
    this.latitudeEntry = latitudeEntry;
    this.longitudeEntry = longitudeEntry;
    this.temperatureActualValue = temperatureActualValue;
    this.temperatureFeelsValue = temperatureFeelsValue;
    this.weatherDetailsFragment = weatherDetailsFragment;
    this.windDirectionValue = windDirectionValue;
    this.windSpeedValue = windSpeedValue;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DetailsWeatherFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DetailsWeatherFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.details_weather_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DetailsWeatherFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.city_name;
      TextView cityName = ViewBindings.findChildViewById(rootView, id);
      if (cityName == null) {
        break missingId;
      }

      id = R.id.condition_image_view;
      AppCompatImageView conditionImageView = ViewBindings.findChildViewById(rootView, id);
      if (conditionImageView == null) {
        break missingId;
      }

      id = R.id.condition_value;
      TextInputEditText conditionValue = ViewBindings.findChildViewById(rootView, id);
      if (conditionValue == null) {
        break missingId;
      }

      id = R.id.humidity_value;
      TextInputEditText humidityValue = ViewBindings.findChildViewById(rootView, id);
      if (humidityValue == null) {
        break missingId;
      }

      id = R.id.latitude_entry;
      TextInputEditText latitudeEntry = ViewBindings.findChildViewById(rootView, id);
      if (latitudeEntry == null) {
        break missingId;
      }

      id = R.id.longitude_entry;
      TextInputEditText longitudeEntry = ViewBindings.findChildViewById(rootView, id);
      if (longitudeEntry == null) {
        break missingId;
      }

      id = R.id.temperature_actual_value;
      TextInputEditText temperatureActualValue = ViewBindings.findChildViewById(rootView, id);
      if (temperatureActualValue == null) {
        break missingId;
      }

      id = R.id.temperature_feels_value;
      TextInputEditText temperatureFeelsValue = ViewBindings.findChildViewById(rootView, id);
      if (temperatureFeelsValue == null) {
        break missingId;
      }

      NestedScrollView weatherDetailsFragment = (NestedScrollView) rootView;

      id = R.id.wind_direction_value;
      TextInputEditText windDirectionValue = ViewBindings.findChildViewById(rootView, id);
      if (windDirectionValue == null) {
        break missingId;
      }

      id = R.id.wind_speed_value;
      TextInputEditText windSpeedValue = ViewBindings.findChildViewById(rootView, id);
      if (windSpeedValue == null) {
        break missingId;
      }

      return new DetailsWeatherFragmentBinding((NestedScrollView) rootView, cityName,
          conditionImageView, conditionValue, humidityValue, latitudeEntry, longitudeEntry,
          temperatureActualValue, temperatureFeelsValue, weatherDetailsFragment, windDirectionValue,
          windSpeedValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
